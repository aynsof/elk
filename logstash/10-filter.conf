filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
  if [type] == "WindowsEventLog" {
      json{
          source => "message"
      }
      if [SourceModuleName] == "eventlog" {
          mutate {
              replace => [ "message", "%{Message}" ]
          }
          mutate {
              remove_field => [ "Message" ]
          }
      }
        mutate {
            lowercase => [ "EventType", "FileName", "Hostname", "Severity" ]
        }
        mutate {
            rename => [ "Hostname", "source_host" ]
        }
        mutate {
            gsub => ["source_host","\.example\.com",""]
        }
        date {
            match => [ "EventTime", "YYYY-MM-dd HH:mm:ss" ]
        }
        mutate {
            rename => [ "Severity", "eventlog_severity" ]
            rename => [ "SeverityValue", "eventlog_severity_code" ]
            rename => [ "Channel", "eventlog_channel" ]
            rename => [ "SourceName", "eventlog_program" ]
            rename => [ "SourceModuleName", "nxlog_input" ]
            rename => [ "Category", "eventlog_category" ]
            rename => [ "EventID", "eventlog_id" ]
            rename => [ "RecordNumber", "eventlog_record_number" ]
            rename => [ "ProcessID", "eventlog_pid" ]
        }
 
        if [SubjectUserName] =~ "." {
            mutate {
                replace => [ "AccountName", "%{SubjectUserName}" ]
            }
        }
        if [TargetUserName] =~ "." {
            mutate {
                replace => [ "AccountName", "%{TargetUserName}" ]
            }
        }
        if [FileName] =~ "." {
            mutate {
                replace => [ "eventlog_channel", "%{FileName}" ]
            }
        }
 
        mutate {
            lowercase => [ "AccountName", "eventlog_channel" ]
        }
 
        mutate {
            remove => [ "SourceModuleType", "EventTimeWritten", "EventReceivedTime", "EventType" ]
        }
  }

  if "esx" in [tags] {
    grok {
      break_on_match => false
      match => [
        "message", "<%{POSINT:syslog_pri}>%{TIMESTAMP_ISO8601:@timestamp} %{SYSLOGHOST:hostname} %{SYSLOGPROG:message_program}: (?<message-body>(?<message_system_info>(?:\[%{DATA:message_thread_id} %{DATA:syslog_level} \'%{DATA:message_service}\'\ ?%{DATA:message_opID}])) \[%{DATA:message_service_info}]\ (?<message-syslog>(%{GREEDYDATA})))",
        "message", "<%{POSINT:syslog_pri}>%{TIMESTAMP_ISO8601:@timestamp} %{SYSLOGHOST:hostname} %{SYSLOGPROG:message_program}: (?<message-body>(?<message_system_info>(?:\[%{DATA:message_thread_id} %{DATA:syslog_level} \'%{DATA:message_service}\'\ ?%{DATA:message_opID}])) (?<message-syslog>(%{GREEDYDATA})))",
        "message", "<%{POSINT:syslog_pri}>%{TIMESTAMP_ISO8601:@timestamp} %{SYSLOGHOST:hostname} %{SYSLOGPROG:message_program}: %{GREEDYDATA:message-syslog}"
      ]
    }
  }
  if "vcenter" in [tags] {
    grok {
      break_on_match => false
      match => [
        "message", "%{TIMESTAMP_ISO8601:@timestamp} (?<message-body>(?<message_system_info>(?:\[%{DATA:message_thread_id} %{DATA:syslog_level} \'%{DATA:message_service}\'\ ?%{DATA:message_opID}])) \[%{DATA:message_service_info}]\ (?<message-syslog>(%{GREEDYDATA})))",
        "message", "%{TIMESTAMP_ISO8601:@timestamp} (?<message-body>(?<message_system_info>(?:\[%{DATA:message_thread_id} %{DATA:syslog_level} \'%{DATA:message_service}\'\ ?%{DATA:message_opID}])) (?<message-syslog>(%{GREEDYDATA})))",
        "message", "<%{POSINT:syslog_pri}>%{TIMESTAMP_ISO8601:@timestamp} %{GREEDYDATA:message-syslog}"
      ]
    }
  }
  if "_grokparsefailure" in [tags] {
    if "esx" in [tags] {
      grok {
        break_on_match => false
        match => [
          "message", "<%{POSINT:syslog_pri}>%{DATA:message_system_info},  (?<message-body>(%{SYSLOGHOST:hostname} %{SYSLOGPROG:message_program}: %{GREEDYDATA:message-syslog}))",
          "message", "${GREEDYDATA:message-syslog}"
        ]
      }
    }
    if "vcenter" in [tags] {
      grok {
        break_on_match => false
        match => [
          "message", "${GREEDYDATA:message-syslog}"
        ]
      }
    }
  }
  syslog_pri { }
  mutate {
    rename => [ "host", "syslog_source-IP" ]
    rename => [ "hostname", "syslog_source-hostname" ]
    rename => [ "message", "message-raw" ]
    rename => [ "program", "message_program" ]
    rename => [ "message_vce_server", "syslog_source-hostname" ]
    remove_field => [ "@version", "type", "path" ]
  }
}
